name: Java CI

on: push

#on:
#  release:
#    types:
#      - published

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: |
          mvn --batch-mode --update-snapshots clean package 

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            datatactics/rahla
            #dttctcs/rahla problem with dockerhub
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,latest
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=sha,prefix=
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Workspace Notification
        uses: DTherHtun/google-chat-action@v0.9
        if: always()
        with:
          project: ${{ github.repository }}
          commit: "${{ github.event.head_commit.message }}" # ${{ steps.meta.outputs.tags }} ${{ steps.meta-frontend.outputs.tags }}
          branch: ${{ github.ref }}
          status: ${{ job.status }}
          actionid: ${{ github.repository }}/runs/${{ github.run_id }}
          webhook: "${{ secrets.GOOGLE_NOTIFICATION_WEBHOOK }}"
